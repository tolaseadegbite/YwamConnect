# SQLite. Versions 3.8.0 and up are supported.
#   gem install sqlite3
#
#   Ensure the SQLite 3 gem is defined in your Gemfile
#   gem "sqlite3"
#
default: &default
  adapter: postgresql
  encoding: unicode
  pool: <%= ENV.fetch("RAILS_MAX_THREADS") { 5 } %>

sqlite: &sqlite
  adapter: sqlite3
  pool: <%= ENV.fetch("RAILS_MAX_THREADS") { 5 } %>
  timeout: 5000

development:
  primary:
    <<: *default
    database: ywam_connect_development
  cache:
    <<: *sqlite
    database: storage/ywam_connect_development_cache.sqlite3
    migrations_paths: db/cache_migrate
  cable:
    <<: *sqlite
    database: storage/ywam_connect_development_cable.sqlite3
    migrations_paths: db/cable_migrate
  queue:
    <<: *sqlite
    database: storage/ywam_connect_development_queue.sqlite3
    migrations_paths: db/queue_migrate

# Warning: The database defined as "test" will be erased and
# re-generated from your development database when you run "rake".
# Do not set this db to the same as development or production.
test:
  <<: *default
  database: ywam_connect_test


# Store production database in the storage/ directory, which by default
# is mounted as a persistent Docker volume in config/deploy.yml.
production:
  primary: &primary_production
    <<: *default
    database: ywam_connect_production
    url: <%= Rails.application.credentials.db_url %>
  cache:
    <<: *sqlite
    database: storage/ywam_connect_production_cache.sqlite3
    migrations_paths: db/cache_migrate
  cable:
    <<: *sqlite
    database: storage/ywam_connect_production_cable.sqlite3
    migrations_paths: db/cable_migrate
  queue:
    <<: *sqlite
    database: storage/ywam_connect_production_queue.sqlite3
    migrations_paths: db/queue_migrate
